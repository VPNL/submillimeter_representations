% unpack constants
addpath(genpath('/home/stone/eshed/beta_bricks/analyses'));
constants = Constants;


mask_threshes = [0.0, 0.75];
mask_struct = struct();

for thresh_idx = 1:length(mask_threshes)
	mask_thresh = mask_threshes(thresh_idx);
    mask_thresh_str = sprintf('thr_%d', ceil(mask_thresh * 100));

	for session_idx = 1:length(constants.sessions)
		session = constants.sessions{session_idx};
		FSID = constants.FSIDs{session_idx};

		preproc_dir = sprintf('%s/%s/%s%s', ...
			constants.fmridata_dir, ...
			session, ...
			constants.preproc_str_hires, ...
			FSID ...
		);

        % construct output path
        outdir = sprintf('%s/04b_epi_maps/%s_%s', ...
            constants.figure_dir, ...
            FSID, ...
            mask_thresh_str ...
        );
		fprintf('Processing %s\n', outdir);
            
        % create output directory, recursively
        mkdirsquiet(outdir);

        % do the dang thing
		mask = draw_mean_epis(...
			FSID, ...
			[0, 2], ...
            constants.depth_sets, ...
			outdir, ...
			preproc_dir, ...
			mask_thresh ...
		);

        mask_struct.(FSID).(mask_thresh_str) = mask;
	end
end

outpath = sprintf('%s/masks.mat', constants.output_dir);
save(outpath, 'mask_struct');
